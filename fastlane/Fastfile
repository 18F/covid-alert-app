fastlane_version '2.53.1'
import "./Android.Fastfile"


before_all do
  # Load root-level shared .env
  Dotenv.overload '../.env'

  # Pull all tags
  git_pull(only_tags: true)
end

desc "Creates a Github Release"
lane :create_github_release do |options|
  UI.user_error!("platform is missing") unless options[:platform]
  upload_assets = options[:upload_assets] ? options[:upload_assets] : []

  set_github_release(
    repository_name: "cds-snc/covid-shield-mobile",
    api_token: ENV["GITHUB_TOKEN"],
    name: "#{options[:platform]}  v#{ENV['APP_VERSION_NAME']} (#{ENV['APP_VERSION_CODE']})",
    tag_name: "#{options[:platform]}-v#{ENV['APP_VERSION_NAME']}-#{ENV['APP_VERSION_CODE']}",

    description: default_changelog,
    commitish: "master",
    upload_assets: upload_assets
  )
end

desc "Returns a default changelog."
lane :default_changelog do |options|
  format = (options[:simple] ? "- %b" : "- %b [%s]")

  changelog = changelog_from_git_commits(
    merge_commit_filtering: "only_include_merges",
    pretty: format
  ), Actions.lane_context[SharedValues::FL_CHANGELOG] = changelog

  clean = changelog.first.gsub("- \n", "")
  puts clean
  clean
end

lane :ensure_build_directory do
  UI.message("Checking for build directories")

  unless File.directory?('../build/ios')
    FileUtils.mkdir_p('../build/ios')
  end
  unless File.directory?('../build/android')
    FileUtils.mkdir_p('../build/android')
  end
end

platform :ios do
  desc "Submit a new Covid Alert beta build to Apple TestFlight"
  lane :beta do
    # ensure_git_branch
    ensure_build_directory

    increment_build_number(
      build_number: ENV["APP_VERSION_CODE"],
      xcodeproj: "ios/CovidShield.xcodeproj"
    )

    output_directory = File.expand_path('../build/ios')

    match(
      git_url: ENV["CERTS_REPO"],
      app_identifier: ENV["APP_ID_IOS"],
      username: ENV["APPLE_ID"],
      type: "appstore",
      readonly: true
    )

    build_app(
      scheme: "CovidShield",
      workspace: "./ios/CovidShield.xcworkspace",
      export_method: "app-store",
      output_directory: output_directory,
      export_options: {
        provisioningProfiles: {
          ENV["APP_ID_IOS"] => ENV["PROFILE"]
        }
      }
    )

    groups = ENV["TEST_GROUPS"].split(",")
    upload_to_testflight(
      groups: groups,
      changelog: default_changelog(simple: true),
      ipa: "#{output_directory}/CovidShield.ipa"
    )

    create_github_release(
      platform: 'iOS',
      upload_assets: ["#{output_directory}/CovidShield.ipa", "#{output_directory}/CovidShield.app.dSYM.zip"]
    )
  end

  desc "Builds a local iOS adhoc .ipa"
  lane :local do
    ensure_build_directory

    match(
      git_url: ENV["CERTS_REPO"],
      app_identifier: ENV["APP_ID_IOS"],
      username: ENV["APPLE_ID"],
      type: "adhoc",
      readonly: true
    )

    output_directory = File.expand_path('../build/ios')

    build_app(
      scheme: "CovidShield",
      workspace: "./ios/CovidShield.xcworkspace",
      export_method: "ad-hoc",
      output_directory: output_directory,
      export_options: {
        provisioningProfiles: {
          ENV["APP_ID_IOS"] => ENV["PROFILE_ADHOC"]
        }
      }
    )
  end
end
